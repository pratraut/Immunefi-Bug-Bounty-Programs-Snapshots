{
  "pageProps": {
    "isAttackathon": false,
    "academyContent": null,
    "ethereumAttackathonSponsors": null,
    "project": {
      "features": [
        "Boost",
        "Vault",
        "Managed Triage: Signal Booster"
      ],
      "premiumTriaging": true,
      "isSafeHarborActive": false
    },
    "bounty": {
      "contentfulId": "31KZR5ZJ9ub35gxMfk8f9l",
      "id": "audit-comp-flare-fassets",
      "slug": "audit-comp-flare-fassets",
      "project": "Audit Comp | Flare | FAssets",
      "maxBounty": 125000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4Ht5ANaRgVQI77zZ9AsJDm/18581691b5f8dd8c0e52fc9eb9364029/F_light_bg.png",
      "launchDate": "2025-05-12T10:00:00.000Z",
      "endDate": "2025-06-09T10:00:00.000Z",
      "updatedDate": "2025-05-14T08:19:08.903Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Portion of the Reward Pool",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "Portion of the Reward Pool",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "Portion of the Reward Pool",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "Portion of the Reward Pool",
          "pocRequired": true
        }
      ],
      "audits": [
        {
          "id": "6BwfNYUlVA7VUckYvvo0Ey",
          "url": "https://dev.flare.network/support/audits/",
          "auditor": "Various Auditors",
          "date": "2025-02-01"
        }
      ],
      "assets": [
        {
          "id": "70iv1uE9MbAeQkeZ6b7lHi",
          "type": "smart_contract",
          "url": "https://github.com/flare-foundation/fassets/blob/main/docs/ImmunefiScope.md",
          "description": "FAssets Contracts - nSloc : 13957",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-05-12T10:00:00.000Z"
        }
      ],
      "impacts": [
        {
          "id": 34,
          "type": "smart_contract",
          "severity": "low",
          "title": "Contract fails to deliver promised returns, but doesn't lose value"
        },
        {
          "id": 15,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield"
        },
        {
          "id": 17,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Permanent freezing of funds"
        },
        {
          "id": 22,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Protocol insolvency"
        },
        {
          "id": 23,
          "type": "smart_contract",
          "severity": "high",
          "title": "Theft of unclaimed yield"
        },
        {
          "id": 25,
          "type": "smart_contract",
          "severity": "high",
          "title": "Permanent freezing of unclaimed yield"
        },
        {
          "id": 27,
          "type": "smart_contract",
          "severity": "high",
          "title": "Temporary freezing of funds"
        },
        {
          "id": 29,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Smart contract unable to operate due to lack of token funds"
        },
        {
          "id": 30,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Block stuffing"
        },
        {
          "id": 31,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)"
        },
        {
          "id": 33,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Unbounded gas consumption"
        },
        {
          "id": 5518,
          "type": "smart_contract",
          "severity": "high",
          "title": "Temporary freezing of funds for at least 24 hour"
        },
        {
          "id": 5519,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Temporary freezing of funds for at least 1 hour"
        }
      ],
      "programOverview": "Flare is the blockchain for data. It is a layer-1, EVM smart contract platform designed to expand the utility of blockchain by delivering data certainty for dApp builders.\n\nFAssets is a trustless, over-collateralized bridge built on Flare that connects non smart contract networks to Flare/Songbird. It enables the creation of wrapped tokens (FAssets) for assets like BTC, DOGE and XRP. The original assets are deposited to the address of an agent and can later be redeemed.  \n\n\nAt the core of FAssets v1.1 is a new architecture component called the Core Vault, designed to improve system liquidity, scalability, and capital efficiency. It serves as a liquidity hub where Agents can deposit native assets (e.g., XRP) and unlock their FLR or SGB collateral. The minted FAssets are secured by collateral, which is in the form of ERC20 tokens on Flare/Songbird chain and native tokens (FLR on Flare, SGB on Songbird). These tokens can participate in Flare's DeFi ecosystem. \n\n\nThe FAsset system maintains security by ensuring every minted Fasset is backed by more value than it represents, creating a safeguard against volatility and protecting users from potential losses. \n\n\nTwo protocols, available on Flare and Songbird blockchains, enable the FAsset system to operate:\n\n- **FTSO** contracts which provide decentralised price feeds for multiple tokens.\n- Flare’s **Flare data connector**, which bridges payment data from any connected chain.\n\nFor more information, please visit [Flare Network](https://flare.network/)",
      "prioritizedVulnerabilities": "To be determined",
      "rewardsBody": "__Mainnet Audit Competition Reward Pool__\n\n- Rewards are distributed among SRs according to [Immunefi’s Standardized Competition Reward Terms](https://immunefisupport.zendesk.com/hc/en-us/articles/31657285001873-Standardized-Competition-Reward-Terms).\n\n- Rewards are denominated in USD and distributed in USDC on Ethereum\n\n- The reward pool is **$125,000 USD** if any bug is found.\n\n- If not a single bug is found (Insights do not count as bugs) the reward pool is **$15,000 USD**.\n\n__Mitigation Audit Rewards__\n\n- The maximum reward pool for the mitigation competition is **$25,000 USD**.\n\n- If any bug in scope is fixed during the mainnet AC then a mitigation audit will begin immediately, run simultaneously, and end 5 days after the mainnet Audit Competition has ended.\n\n- The mitigation audit’s reward pool is based on how many bugs are fixed while the competitions are live relative to how many bugs are found in the mainnet Audit Competition. So if projects make more bug fixes mid-competition then the size of the mitigation audit reward pool increases up to the maximum.\n\n- The full mitigation audit reward terms can be [read here](https://immunefisupport.zendesk.com/hc/en-us/articles/33256328266769-Mainnet-Audit-Competition-Rules).",
      "outOfScopeAndRules": "To be determined",
      "assetsBodyV2": "__Asset Accuracy Assurance__\n\n- Bugs found on assets incorrectly listed in-scope will be considered valid and be rewarded.\n\n__Private Known Issues Reward Policy__\n\n- Private known issues, meaning known issues that were not publicly disclosed, are valid for a reward.\n\n__Primacy of Impact vs Primacy of Rules__\n\n- Flare adheres to the Primacy of Rules, which means that the whole Audit Competition & Mitigation Audit program is run strictly under the terms and conditions stated within this page.\n\n__KYC Requirement__\n\n- No KYC is required for the Flare FAssets Audit Competition & Mitigation Audit\n\n__Eligibility Criteria__\n\n- Security researchers who wish to participate must adhere to the rules of engagement set forth in this program and cannot be:\n   - On OFACs SDN list \n   - Official contributor, both past or present\n   - Employees and/or individuals closely associated with the project \n   - Security auditors that directly or indirectly participated in the audit review\n\n__Responsible Publication__\n\n- Whitehats may publish their bug reports after they have been fixed & paid, or closed as invalid, with the following exceptions:\n   - Bug reports in mediation may not be published until mediation has concluded and the bug report is resolved.\n\n- Immunefi may publish bug reports submitted to this Audit Competition and a leaderboard of the participants and their earnings.\n\n__Feasibility Limitations__\n\n- When there is uncertainty about how feasible an attack is Immunefi will use our feasibility limitation standards to determine the severity of the report.\n\n__Immunefi Standard Badge__\n\n- By adhering to Immunefi’s best practice recommendations, Flare Network has satisfied the requirements for the [Immunefi Standard Badge](https://immunefisupport.zendesk.com/hc/en-us/articles/15006865432209-The-Immunefi-Standard-Badge).",
      "impactsBody": "**Build commands, Test commands, and instructions on how to run them:**\n\n- Instructions on how to start the project: https://github.com/flare-foundation/fassets?tab=readme-ov-file#getting-started. The easiest way is to add code in unit tests because the functionality on which the project relates is mocked.\n- Look at https://github.com/flare-foundation/fassets/blob/main/test/integration/fasset-simulation/AttackScenarios.ts where researchers have submitted their reports.\n- Information and some guides can also be found on Flare Dev Hub: https://dev.flare.network/fassets/overview\n\n\n**What ERC20 / ERC721 / ERC777 / ERC1155 token standards are supported? Which are not?**\n\n- Only ERC20 for FAsset implementation\n\n\n**Which chains and/or networks will the code in scope be deployed to?**\n\n- Coston (testnet), Coston2 (testnet), Songbird, Flare\n\n\n**Is this an upgrade of an existing system? If so, which? And what are the main differences?**\n\n- The project is an upgrade of FAssets V1. The new functionality is centered around the core vault, exposed in the `CoreVaultFacet.sol`\n\n\n\n**Where do you suspect there may be bugs?**\n\n- Those interacting with new Core Vault features.\n\n\n**What external dependencies are there?**\n\n- FDC (Flare Data Connector), FTSO-V2 (Flare Time Series Oracle)\n\n\n**Where might Security Researchers confuse out-of-scope code to be in-scope?**\n\n- The FAssets system is able to support wrapped tokens for XRP, BTC and DOGE. However, the initial v1.1 deployment will only have XRP (FXRP) enabled and that will be the sole scope of this audit competition. Any attacks related to FBTC, FDOGE, or UTXO-based logic in general, are out of scope.\n- handshake-based functionalities based on a non-zero `handshakeType` setting are also out of scope.\n- Impacts caused by attacks requiring access to an **Agent** role without additional modifications to the privileges attributed are open to be downgraded by one level of severity (e.g. from Critical to High) \n\n\n**What addresses would you consider any bug report requiring their involvement to be out of scope, as long as they operate within the privileges attributed to them?**\n\n- governance, core vault multisig\n\n**What addresses would you consider any bug report requiring their involvement be out of scope, even if they exceed the privileges attributed to them?**\n\n- governance (hard to exceed the privileges, as they can update the contracts)\n\n\n**Previous Audits**\n\n- Flare Network’s completed audit reports can be found at https://dev.flare.network/support/audits/. Unfixed vulnerabilities  mentioned in these reports are not eligible for a reward.",
      "immunefiStandard": true,
      "tags": {
        "general": [
          "Immunefi Standard",
          "KYC Not Required",
          "PoC Not Required",
          "Step-by-step PoC Required"
        ],
        "productType": [],
        "projectType": [
          "Blockchain"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Solidity"
        ],
        "featured": [
          "Launched Recently"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Portion of the Reward Pool"
          },
          {
            "level": "High",
            "payout": "Portion of the Reward Pool"
          },
          {
            "level": "Medium",
            "payout": "Portion of the Reward Pool"
          },
          {
            "level": "Low",
            "payout": "Portion of the Reward Pool"
          }
        ],
        "web_rewards": []
      },
      "evaluationEndDate": "2025-07-07T10:00:00.000Z",
      "boostedIntroStartingIn": "**$125,000 USD** in rewards available for finding bugs on the Flare Network's FAssets smart contracts. \n\n\nThis is a **Mainnet Audit Competition** and the project may fix bugs mid-competition. The more bugs a project fixes the more rewards will be unlocked for a simultaneously running mitigation competition that is open for everyone to participate in. \n\n\nIf Flare Network doesn't make any public bug fix during their Mainnet Audit Competition, then within a maximum of 30 days after mainnet competition has ended their **mitigation audit** will launch. \n\n\n__Mitigation Audit Rewards__\n\n\nThe maximum reward pool for the mitigation audit is **$25,000 USD**.\n\n\nIf any bug in scope is fixed during the Mainnet Audit Competition then a mitigation audit will begin immediately, run simultaneously, and end 5 days after the mainnet Audit Competition has ended.\n\n\nThe mitigation audit’s reward pool is based on how many bugs are fixed while the competitions are live relative to how many bugs are found in the mainnet Audit Competition. So if projects make more bug fixes mid-competition then the size of the mitigation audit reward pool increases up to the maximum.\n\nKYC is not required.\n\n\nWhen the Audit Competition has ended, Immunefi will publish an event-specific leaderboard and bug reports from the event.\n\n\nFor more information, please visit [Flare Network](https://flare.network/)",
      "boostedIntroLive": "**$125,000 USD** in rewards available for finding bugs on the Flare Network's FAssets smart contracts. \n\n\nThis is a **Mainnet Audit Competition** and the project may fix bugs mid-competition. The more bugs a project fixes the more rewards will be unlocked for a simultaneously running mitigation competition that is open for everyone to participate in. \n\n- Read the Mainnet Audition Competition **Rules** [here](https://immunefisupport.zendesk.com/hc/en-us/articles/33256328266769-Mainnet-Audit-Competition-Rules) \n\nIf Flare Network doesn't make any public bug fix during their Mainnet Audit Competition, then within a maximum of 30 days after mainnet competition has ended their **Mitigation Audit** will launch. \n\nFor more information, please visit [Flare Network](https://flare.network/)\n\n\n- KYC is not required.\n\n- Flat Reward Pool for the Mainnet Audit Competition\n\n- Any technical questions and support requests can be asked directly to Flare Network or Immunefi in the [Flare Network Audit Competition Discord channel](https://discord.com/channels/787092485969150012/1369326485659189259).\n\n- When the Audit Competition has ended, Immunefi will publish an event-specific leaderboard and bug reports from the event.\n\n- A few days after the launch, Immunefi will publish Flare Network's technical walkthrough on our official [YouTube channel](https://www.youtube.com/@immunefi).\n\n- Runnable POCs are not required. Read our [New Audit Competition Proof-of-Concept Rules](https://immunefisupport.zendesk.com/hc/en-us/articles/33260632501777-Audit-Competition-Proof-of-Concept-Rules)\n\n- Insight reports can be submitted. Read our [Insight validity rules](https://immunefisupport.zendesk.com/hc/en-us/articles/34179768760337-Insight-Severity-Level)",
      "boostedIntroEvaluating": "",
      "boostedIntroFinished": "",
      "rewardsToken": "USDC",
      "rewardsPool": 125000,
      "sourceLinesOfCode": 13957,
      "boostedSummaryReport": null,
      "inviteOnly": false,
      "hideAssetsInScope": null,
      "boostedLeaderboard": [],
      "features": [
        "Boost",
        "Vault",
        "Managed Triage: Signal Booster"
      ],
      "academyStartDate": null,
      "websiteUrl": "https://flare.network/",
      "description": "Flare is the blockchain for data. It is a layer-1, EVM smart contract platform designed to expand the utility of blockchain by delivering data certainty for dApp builders. \n\nFAssets is a trustless, over-collateralized bridge built on Flare that connects non smart contract networks to Flare/Songbird. It enables the creation of wrapped tokens (FAssets) for assets like BTC, DOGE and XRP. \n\n\nAt the core of FAssets v1.1 is a new architecture component called the Core Vault, designed to improve system liquidity, scalability, and capital efficiency.",
      "githubUrl": null,
      "feasibilityLimitations": null,
      "prohibitedActivites": null,
      "responsiblePublicationCategory": null,
      "knownIssues": [
        {
          "id": 40,
          "description": "Triggering instructions might run out of gas: the size of the allowed destination addresses will be low (5-10).",
          "link": "https://dev.flare.network/support/audits/",
          "lastUpdatedAt": "2025-04-15T00:00:00.000Z",
          "relatedImpactInScope": "smart_contract"
        },
        {
          "id": 39,
          "description": "Array of escrows always grows: the number of escrows created will be low (if it is more than one or two, we will increase the daily escrow amount). So the total number of escrows will not be huge, perhaps a few hundred.",
          "link": "https://dev.flare.network/support/audits/",
          "lastUpdatedAt": "2025-04-15T00:00:00.000Z",
          "relatedImpactInScope": "smart_contract"
        },
        {
          "id": 38,
          "description": "Escrows finalized close to expiry time decouple the Core Vault internal accountancy: before escrows are released, the triggering bots will be shut down, and they will only be enabled after setEscrowsFinished is called. So there will be no instructions triggered between escrow finalization and the corresponding update on the core vault manager.",
          "link": "https://dev.flare.network/support/audits/",
          "lastUpdatedAt": "2025-04-15T00:00:00.000Z",
          "relatedImpactInScope": "smart_contract"
        },
        {
          "id": 37,
          "description": "Users are unprotected against missing or malformed vault redemption payments: in that case, we assume the core vault has full trust, and its redemptions don't have a time limit. Also, core-vault redeemers are special entities.",
          "link": "https://dev.flare.network/support/audits/",
          "lastUpdatedAt": "2025-04-15T00:00:00.000Z",
          "relatedImpactInScope": "smart_contract"
        }
      ],
      "knownIssueAssurance": false,
      "defaultOutOfScopeBlockchain": null,
      "defaultOutOfScopeSmartContract": "- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Impacts involving centralization risks",
      "defaultOutOfScopeGeneral": "- Impacts requiring attacks that the reporter has already exploited themselves, leading to damage\n- Impacts caused by attacks requiring access to leaked keys/credentials\n- Impacts caused by attacks requiring access to privileged addresses (including, but not limited to: governance and strategist contracts) without additional modifications to the privileges attributed\n- Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code\n- Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production\n- Best practice recommendations\n- Feature requests\n- Impacts on test files and configuration files unless stated otherwise in the bug bounty program\n- Impacts requiring phishing or other social engineering attacks against project's employees and/or customers",
      "defaultOutOfScopeWebAndApplications": null,
      "defaultProhibitedActivities": "- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n- [Any other actions prohibited by the Immunefi Rules](https://immunefi.com/rules/)",
      "defaultFeasibilityLimitations": "The project may be receiving reports that are valid (the bug and attack vector are real) and cite assets and impacts that are in scope, but there may be obstacles or barriers to executing the attack in the real world. In other words, there is a question about how feasible the attack really is. Conversely, there may also be mitigation measures that projects can take to prevent the impact of the bug, which are not feasible or would require unconventional action and hence, should not be used as reasons for downgrading a bug's severity.\n\nTherefore, Immunefi has developed a set of feasibility limitation standards which by default states what security researchers, as well as projects, can or cannot cite when reviewing a bug report.\n- [Chain Rollbacks](https://immunefisupport.zendesk.com/hc/en-us/articles/16913153448721-Chain-Rollbacks)\n- [Pre-Impact Bug Monitoring](https://immunefisupport.zendesk.com/hc/en-us/articles/19430444320401-Pre-Impact-Bug-Monitoring)\n- [Attack Investment Amount](https://immunefisupport.zendesk.com/hc/en-us/articles/17243068885265-Attack-Investment-Amount)\n- [Attacks With A Financial Risk To The Attacker](https://immunefisupport.zendesk.com/hc/en-us/articles/17454897136401-Attacks-With-A-Financial-Risk-To-The-Attacker)\n- [When Is An Impactful Attack Downgraded To Griefing?](https://immunefisupport.zendesk.com/hc/en-us/articles/17455102268305-When-Is-An-Impactful-Attack-Downgraded-To-Griefing)",
      "customOutOfScopeInformation": "- The FAssets system is able to support wrapped tokens for XRP, BTC and DOGE. However, the initial v1.1 deployment will only have XRP (FXRP) enabled and that will be the sole scope of this audit competition. Any attacks related to FBTC, FDOGE, or UTXO-based logic in general, are out of scope.  \n- handshake-based functionalities based on a non-zero `handshakeType` setting are also out of scope.\n- Impacts caused by attacks requiring access to an **Agent** role without additional modifications to the privileges attributed are open to be downgraded by one level of severity (e.g. from Critical to High) ",
      "customProhibitedActivities": [],
      "rewardsTokenNetwork": "Ethereum",
      "eligibilityCriteria": [],
      "eligibilityCriteriaAdditionalInformation": null,
      "programCodebases": [],
      "programDocumentations": [
        {
          "id": 224,
          "title": "Flare Developer Hub",
          "description": "Conceptual understanding",
          "url": "https://dev.flare.network/fassets/overview"
        },
        {
          "id": 225,
          "title": "Technical Details",
          "description": "Refer to the inline code documentation directly in the repository.",
          "url": "https://github.com/flare-labs-ltd/fassets/tree/main/contracts"
        },
        {
          "id": 227,
          "title": "Example of Technical Details",
          "description": "As an example, you can explore the Redemption function implementation in RedemptionRequestsFacet.sol",
          "url": "https://github.com/flare-labs-ltd/fassets/blob/main/contracts/assetManager/facets/RedemptionRequestsFacet.sol#L33"
        }
      ],
      "primacy": "primacy_of_rules",
      "newProgramRewardsEnabled": false,
      "findingsUrl": null,
      "premiumTriaging": true
    },
    "layoutProps": {
      "headerMarginBottom": "mb-12 lg:mb-16"
    },
    "metaData": {
      "title": "Audit Comp | Flare | FAssets Bug Bounties",
      "description": "Find bugs and vulnerabilities on Audit Comp | Flare | FAssets and get paid up to $125,000.",
      "url": "https://immunefi.com/audit-competition/audit-comp-flare-fassets/",
      "ogImg": "/api/bounty/og-image/?project=Audit+Comp+%7C+Flare+%7C+FAssets&slug=audit-comp-flare-fassets"
    }
  },
  "__N_SSG": true
}
